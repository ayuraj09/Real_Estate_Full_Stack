generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model post{
  
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  price Int 
  address String
  images String[]
  city String
  bedroom Int
  bathroom Int
  latitude String
  longitude String
  type Type
  property Property
  createdAt DateTime @default(now())
  user users @relation(fields : [userId], references: [id])
  userId String @db.ObjectId
  postdetail postdetails?

}

enum Type{
  buy
  rent
}

enum Property{
  apartment
  house
  condo
  land
}

model postdetails{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  desc String
  utilities String?
  pet String?
  income String
  size Int
  school Int
  bus Int
  restaurant Int
  posts post @relation(fields : [postId], references: [id])
  postId String @db.ObjectId @unique
}

model users{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  username String @unique
  password String
  avatar String? //can be empty
  posts post[]
  createdAt DateTime @default(now())
  chats Chat[] @relation(fields: [chatIds], references: [id])
  chatIds String[] @db.ObjectId
}

model Chat{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  user users[] @relation(fields : [userId], references: [id])
  userId String[] @db.ObjectId
  createdAt DateTime @default(now())
  seenBy String[] @db.ObjectId
  messages Message  []
  lastMessage String?
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  text String  
  userId String
  chat Chat @relation(fields: [chatId], references: [id])
  chatId String @db.ObjectId
  createdAt DateTime @default(now())
}